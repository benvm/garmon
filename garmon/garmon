#!/usr/bin/python
#
# garmon
#
# Copyright (C) Ben Van Mechelen 2007 <me@benvm.be>
# 
# garmon is free software.
# 
# You may redistribute it and/or modify it under the terms of the
# GNU General Public License, as published by the Free Software
# Foundation; either version 2 of the License, or (at your option)
# any later version.
# 
# garmon is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with garmon.  If not, write to:
# 	The Free Software Foundation, Inc.,
# 	51 Franklin Street, Fifth Floor
# 	Boston, MA  02110-1301, USA.

import os
import sys
import gtk
import logging
from optparse import OptionParser

_dirname = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
if os.path.exists(os.path.join(_dirname,"ChangeLog")):
    print 'Running uninstalled'
    sys.path.insert(0, _dirname)

import garmon
import garmon.garmon_app
from garmon import DEBUG_LEVEL, DEBUG_LEVELS


usage = "usage: %prog [options]"
parser = OptionParser(usage)
parser.set_defaults(debug_level='INFO')
parser.add_option('-d', '--debug-level', dest='debug_level',
					help='The treshold for messages that are printed to the\
					      screen: should be one of: %s  default is INFO' %  
					      ', '.join(DEBUG_LEVELS))
					
(options, args) = parser.parse_args()
if len(args) != 0:
	parser.error('incorrect number of arguments')
	
level = options.debug_level.upper()
if not level in DEBUG_LEVELS:
    parser.error('debug-level should be one of %s' % ','.join(DEBUG_LEVELS))
DEBUG_LEVEL = getattr(logging, level)
garmon.logger.setLevel(DEBUG_LEVEL)


garmon.garmon_app.main()


